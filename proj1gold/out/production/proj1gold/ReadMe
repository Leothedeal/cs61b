/*@Author Leo
*@Date 2020/12/7
*/
import static org.junit.Assert.*;
import org.junit.Test;

import java.util.Random;

public class TestArrayDequeGold {
    StudentArrayDeque<Integer> sa = new StudentArrayDeque<>();
    ArrayDequeSolution as = new ArrayDequeSolution();

    @Test
    public void testDeque1() {
        Random ran = new Random();
        for (int i = 0; i < 9; i++) {
            double b = ran.nextDouble();
            if (b < 0.5) {
                sa.addFirst(i);
                as.addFirst(i);
            }
            sa.addLast(i);
            as.addLast(i);
        }
        sa.printDeque();
        as.printDeque();

    }


    public void testHelper(StudentArrayDeque a, ArrayDequeSolution b) {
        int count = 0;
        for (int i = 0; i < sa.size(); i++) {
            int a1 = (Integer) a.get(i);
            int a2 = (Integer) b.get(i);
            if (compareHelper(a1, a2)) {
                count++;
            } else {
                System.out.println("oops,there might be something wrong");
                System.out.println("the studentSolution is " + a1 + " while the solution should be " + a2);
            }
        }
        if (count == sa.size()) {
            System.out.println("You have passed the test!!!");
        }
    }

    @Test
    public void testStudentSolution() {
        ArrayDequeSolution as = new ArrayDequeSolution();
        StudentArrayDeque<Integer> sa = new StudentArrayDeque<>();
        int[] a = new int[9];
        for (int i = 0; i < 9; i++) {
            sa.addLast(i);
        }
        sa.printDeque();
    }

    public boolean compareHelper(int x, Integer y) {
        if (y.equals(x)) {
            return true;
        }
        return false;
    }

    @Test
    public void testDequeRemoveFirst() {
        for (int i = 0; i < 9; i++) {
            sa.addFirst(i);
            as.addFirst(i);
        }
        for (int i = 0; i < 5; i++) {
            sa.removeFirst();
            as.removeFirst();
        }

    }

    @Test
    public void testDequeRemoveLast() {
        for (int i = 0; i < 9; i++) {
            sa.addLast(i);
            as.addLast(i);
        }
        for (int i = 0; i < 6; i++) {
            sa.removeLast();
            as.removeLast();
        }
        testHelper(sa, as);
    }
    @Test
    public void testMyFunction() {
        StudentArrayDeque<Integer> sa1 = new StudentArrayDeque<>();
        for (int i = 0; i < 9; i++) {
            sa.addFirst(i);
        }
        for (int i = 0; i < 5; i++) {
            sa1.addFirst(i);
        }
        assertEquals(sa1,sa);
    }
}